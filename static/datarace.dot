digraph "ProgramCFG" {
	label="ProgramCFG";

	Node0xb2c9c84 [shape=record,label="{Delay.entry(0)\n32\n34\n36\n}"];
	Node0xb2c9c84 -> Node0xb2c9d1c;
	Node0xb2c9d1c [shape=record,label="{Delay.for.cond(1)\n36\n}"];
	Node0xb2c9d1c -> Node0xb2eb88c;
	Node0xb2c9d1c -> Node0xb2eb7bc;
	Node0xb2eb7bc [shape=record,label="{Delay.for.body(2)\n39\n}"];
	Node0xb2eb7bc -> Node0xb2eb814;
	Node0xb2eb814 [shape=record,label="{Delay.for.inc(3)\n36\n}"];
	Node0xb2eb814 -> Node0xb2c9d1c;
	Node0xb2eb88c [shape=record,label="{Delay.for.end(4)\n41\n}"];
	Node0xb2eb88c -> Node0xb2d87c4;
	Node0xb2eb88c -> Node0xb2ec004;
	Node0xb2eb904 [shape=record,label="{ReadASIC.entry(5)\n44\n46\n47\n48\n49\n51\n52\n53\n55\n}"];
	Node0xb2eb904 -> Node0xb2eb9d4;
	Node0xb2eb9d4 [shape=record,label="{ReadASIC.for.cond(6)\n55\n}"];
	Node0xb2eb9d4 -> Node0xb2ebb04;
	Node0xb2eb9d4 -> Node0xb2eba5c;
	Node0xb2eba5c [shape=record,label="{ReadASIC.for.body(7)\n57\n58\n}"];
	Node0xb2eba5c -> Node0xb2eba8c;
	Node0xb2eba8c [shape=record,label="{ReadASIC.for.inc(8)\n55\n}"];
	Node0xb2eba8c -> Node0xb2eb9d4;
	Node0xb2ebb04 [shape=record,label="{ReadASIC.for.end(9)\n60\n62\n}"];
	Node0xb2ebb04 -> Node0xb2ebbd4;
	Node0xb2ebbd4 [shape=record,label="{ReadASIC.while.cond(10)\n62\n}"];
	Node0xb2ebbd4 -> Node0xb2ebce4;
	Node0xb2ebbd4 -> Node0xb2ebc5c;
	Node0xb2ebc5c [shape=record,label="{ReadASIC.land.rhs(11)\n62\n}"];
	Node0xb2ebc5c -> Node0xb2ebce4;
	Node0xb2ebce4 [shape=record,label="{ReadASIC.land.end(12)\n62\n}"];
	Node0xb2ebce4 -> Node0xb2ebdf4;
	Node0xb2ebce4 -> Node0xb2ebd6c;
	Node0xb2ebd6c [shape=record,label="{ReadASIC.while.body(13)\n64\n66\n67\n}"];
	Node0xb2ebd6c -> Node0xb2ebbd4;
	Node0xb2ebdf4 [shape=record,label="{ReadASIC.while.end(14)\n69\n70\n72\n}"];
	Node0xb2ebdf4 -> Node0xb2ebe9c;
	Node0xb2ebdf4 -> Node0xb2ebe24;
	Node0xb2ebe24 [shape=record,label="{ReadASIC.if.then(15)\n74\n75\n}"];
	Node0xb2ebe24 -> Node0xb2ebf14;
	Node0xb2ebe9c [shape=record,label="{ReadASIC.if.else(16)\n78\n}"];
	Node0xb2ebe9c -> Node0xb2ebf14;
	Node0xb2ebf14 [shape=record,label="{ReadASIC.if.end(17)\n81\n}"];
	Node0xb2ebf14 -> Node0xb2ebf8c;
	Node0xb2ebf8c [shape=record,label="{WriteASIC.entry(18)\n84\n86\n87\n88\n89\n91\n92\n93\n95\n96\n97\n99\n}"];
	Node0xb2ebf8c -> Node0xb2c9c84;
	Node0xb2ec004 [shape=record,label="{WriteASIC.if.then(19)\n101\n}"];
	Node0xb2ec004 -> Node0xb2ec09c;
	Node0xb2ec09c [shape=record,label="{WriteASIC.for.cond(20)\n101\n}"];
	Node0xb2ec09c -> Node0xb2d874c;
	Node0xb2ec09c -> Node0xb2ec114;
	Node0xb2ec114 [shape=record,label="{WriteASIC.for.body(21)\n103\n104\n}"];
	Node0xb2ec114 -> Node0xb2ec16c;
	Node0xb2ec16c [shape=record,label="{WriteASIC.for.inc(22)\n101\n}"];
	Node0xb2ec16c -> Node0xb2ec09c;
	Node0xb2d874c [shape=record,label="{WriteASIC.for.end(23)\n105\n}"];
	Node0xb2d874c -> Node0xb2d87c4;
	Node0xb2d87c4 [shape=record,label="{WriteASIC.if.end(24)\n107\n109\n}"];
	Node0xb2d883c [shape=record,label="{Task.entry(25)\n114\n115\n116\n}"];
	Node0xb2d883c -> Node0xb2d8984;
	Node0xb2d883c -> Node0xb2eb904;
	Node0xb2d88b4 [shape=record,label="{stakeTask.entry(26)\n119\n122\n}"];
	Node0xb2d88b4 -> Node0xb2d8984;
	Node0xb2d8984 [shape=record,label="{stakeTask.while.body(27)\n125\n126\n}"];
	Node0xb2d8984 -> Node0xb2d883c;
	Node0xb2d89b4 [shape=record,label="{stakeTask.return(28)\n128\n}"];
	Node0xb2d8a2c [shape=record,label="{main.entry(29)\n131\n133\n134\n135\n136\n137\n142\n}"];
	Node0xb2d8a2c -> Node0xb2d88b4;
}
